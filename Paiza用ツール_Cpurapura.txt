

2021/11/02
225B
#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i = 0;i < (n); ++i)

int main(void){
    // Your code here!
    int n,m;
    cin >> n >> m;
    vector<vector<int>> b(n,vector<int>(m));
    rep(i,n)rep(j,m) cin >> b[i][j];
    rep(i,n)rep(j,m) b[i][j]--;
    int si = b[0][0] / 7;
    int sj = b[0][0] % 7;
    if(sj+m-1 >= 7) {cout << "No" << endl; return 0;}
    rep(i,n)rep(j,m){
        int nb = (si+i)*7 + (sj+j);
        if(b[i][j] != nb){
            cout << "No" << endl;
            return 0;
        }
    }
    cout << "Yes" << endl;

#include <bits/stdc++.h>" << endl;
    
    return 0;
}



2021/11/01
225A
atcorder写経
#include <iostream>
using namespace std;
int main(void){
    // Your code here!
    string s;
    cin >> s;
    if(s[0] == s[1] && s[0] == s[2])  cout << 1 << endl;
    else if(s[0] == s[1] || s[1] == s[2] || s[2] == s[0]) cout << 3 << endl;
    else cout << 6 << endl;
    return 0;
}



//出力と改行
#include<iostream>
using namespace std;

int main(){
    cout << "Hello world" << endl;
}

// cout シーアウト
// << 出力演算子
// coutのように、ある演算に対してどう振る舞えばよいか知っているデータのことを、オブジェクトと呼びます。
// cin >> i; コンソールから入力
// cout << "入力された値は" << i << "です" << endl;
// endlはバッファをフラッシュしている　簡単に言うと改行してフラッシュの組み合わせ\nとフラッシュのこと
/*
C++での"endl"について
簡単に書くなら"改行"だけど、改行と"flush"のセットの処理のこと。
"flush"とは、printfなどはプログラムが正常終了したタイミングか、ストリーム(処理予定のデータ)が満杯になった時に処理されるようになっている。普通のコンソール出力処理はこうなっている
しかし→
→
flushを使用するとflushが書き込まれている時点で処理される。まとめて処理と、少しずつ処理。処理の流れがわかりやすい利点がある。
難点は処理が遅くなること。ストリームに溜まったのをまとめて処理するのではなく、一定範囲ごとに出力をしているので遅くなる。
ここでendlに戻る→
→
つまりendlは改行のタイミングでそこまでのストリームに溜まっているデータを処理しているということ。
だから"\n(改行)"と"endl(改行とflush)"も意味が異なることになる。
*;/
/*
・C++
cout →　コンソールアウトのこと
使用する際は#include<iostream>を記述する
・"::" コロンを二つ書くとスコープ解決演算子となる
→同じ関数でも違うクラスに作られたものを指定して使用できるみたいな感じかな？いまいち理解しきれていない
省略ができるみたい　同じことを書かなくてよくなる
*;/

/*
4パターンの組み合わせを出したいならforを四つ組み合わせれば出せる
先に
bool f = false;
しておき
for(){
	for(){
	...
	f = true;
	
とすれば出せる

*/

/*

int にも四種類ある
#include <cstdint>
が必要

*/

/*

オーバーロードはある
その際の関数はstdとかで付けられる
namespaceのこと

*/


・Parse　出力
#include <iostream>
#include <string>

using namespace std;
int main(void){
    // 自分の得意な言語で
    // Let's チャレンジ！！
    string str,str1,str2;
    string st0,st1;
    getline(cin, str,' ');
    getline(cin, str1,' ');
    getline(cin, str2);
    getline(cin, st0,' ');
    getline(cin, st1);
    
    int year = atoi(str.c_str());
    int month = atoi(str1.c_str());
    int day = atoi(str2.c_str());
    int fesMonth = atoi(st0.c_str());
    int fesDay = atoi(st1.c_str());
    
    int yearFlg = 0;
    
    int longMonth = 0;
    int betweenMonth = 0;
    
    if(fesMonth - month < 1){
        longMonth = 13 + fesMonth - month;
        yearFlg = 1;
    }else{
        longMonth = fesMonth - month;
    }
    
    betweenMonth = longMonth;

    int longDay = 0;

    if(month % 2 == 0){
        //偶数
        longDay = 15 - day;
    }else{
        longDay = 13 - day;
    }

    longDay = longDay + fesDay;
    betweenMonth = betweenMonth - 1;
    month++;
    
    for(int i = 0;i<betweenMonth;i++){
        if(month == 14){
            month = 1;
        }
        if(month % 2 == 0){
            longDay = longDay + 15;
        }else{
            longDay = longDay + 13;
        }
        month++;
    }
    
    if(yearFlg == 1){
        year++;
        while(year % 4 != 1){
            longDay = longDay + 181;
            year++;
        }
    }else{
        while(year % 4 != 1){
            longDay = longDay + 181;
            year++;
        }
    }
    
    cout << longDay << endl;
    
    return 0;
}